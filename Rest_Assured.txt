
Status codes

Most status codes which frequently used
200- Ok
404- Page not found
401- Unauthorized
400 – Bad request
500 – Internal Error



Steps for Rest-Assured ---
Download the jar "rest-assured-3.0.3.jar"
	@Test
	public void GetWeatherDetailsCondensed()
	{
		// Specify the base URL to the RESTful web service
		RestAssured.baseURI = "http://restapi.demoqa.com/utilities/weather/city";

		// interface called RequestSpecification. This interface allows to modify 		
		//the request, like adding headers or adding authentication details. 
		RequestSpecification httpRequest = RestAssured.given();

		// Make a GET request call directly by using RequestSpecification.get() method.
		// Response is an interface which lives in the package: io.restassured.response. This interface has lots of method
		Response response = httpRequest.get("/Hyderabad");
		//Response response = httpRequest.request(Method.GET, "/Hyderabad");

		// Response.asString method will directly return the content of the body
		System.out.println("Response Body is =>  " + response.asString());
		//OR
		ResponseBody body = response.getBody();
		System.out.println("Response Body is: " + body.asString());


		//start Validate Response Status Code using Rest-Assured 	
		int statusCode = response.getStatusCode();
 
		// Assert that correct status code is returned.
		Assert.assertEquals(statusCode /*actual value*/, 200 /*expected value*/, "Correct status code returned");

		String statusLine = response.getStatusLine(); // Status Line: HTTP/1.1 200 OK
		//end Validate Response Status Code using Rest-Assured 
		
		//start Validate Response Header using Rest-Assured
		Headers allHeaders = response.headers();
 
	// Iterate over all the Headers
	for(Header header : allHeaders){
		System.out.println("Key: " + header.getName() + " Value: " + header.getValue());
	}

OR

	String contentType = response.header("Content-Type");
	System.out.println("Content-Type value: " + contentType);
 
	// Reader header of a give name. In this line we will get
	// Header named Server
	String serverType =  response.header("Server");
	System.out.println("Server value: " + serverType);
 
	// Reader header of a give name. In this line we will get
	// Header named Content-Encoding
	String acceptLanguage = response.header("Content-Encoding");
	System.out.println("Content-Encoding: " + acceptLanguage);
	}
	
	//Making POST request 
	JSONObject requestParams = new JSONObject();
	requestParams.put("FirstName", "Virender"); // Cast
	requestParams.put("LastName", "Singh");
	requestParams.put("UserName", "sdimpleuser2dd2011");
	requestParams.put("Password", "password1");
 
	requestParams.put("Email",  "sample2ee26d9@gmail.com");
	request.body(requestParams.toJSONString());
	Response response = request.post("/register");
 
	int statusCode = response.getStatusCode();
	Assert.assertEquals(statusCode, "201");
	String successCode = response.jsonPath().get("SuccessCode");
	Assert.assertEquals( "Correct Success code was returned", successCode, "OPERATION_SUCCESS");
------------->

 Body:	 {
  		“FirstName” : “value”
   		“LastName”  : “value”,
   		“UserName”  : “value”,
   		“Password”  : “value”,
   		“Email”     : “Value”
 	}

// Read Json Response Body
JsonPath jsonPathEvaluator = response.jsonPath();
 
	// Let us print the city variable to see what we got
	System.out.println("City received from Response " + jsonPathEvaluator.get("City")); --Ghaziabad
 //OR


output- Response Body: 

{
    "City": "Ghaziabad",
    "Temperature": "32 Degree celsius",
    "Humidity": "75 Percent",
    "WeatherDescription": "haze",
    "WindSpeed": "2.1 Km per hour",
    "WindDirectionDegree": "320 Degree"
}



Authontication - 
certificate
RequestSpecification certificate(String certURL,
                                 String password,
                                 CertificateAuthSettings certificateAuthSettings)
Sets a certificate to be used for SSL authentication. See Class.getResource(String) for how to get a URL 
from a resource on the classpath.
Parameters:
certURL - URL to a JKS keystore where the certificate is stored.
password - The password for the keystore
certificateAuthSettings - More advanced settings for the certificate authentication
------------------------------------------------------------
------------------------------------------------------------
------------------------------------------------------------
----------------------Request-------------------------------

Request Line: GET /utilities/weatherfull/city/ghaziabad HTTP/1.1

Request Method: GET

Request Time: 2018-08-19 06:59:45

Accept-Encoding: gzip, deflate

Host address: restapi.demoqa.com

Client IP: 

Client Port: 58566

HTTP Protocol Version: HTTP/1.1

Connection: 

User-Agent: Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36

Accept-Language: en-US,en;q=0.9

Request body: 





-------------------------Response---------------------------

Status Line: HTTP/1.1 200 OK

Response status code -> 200 OK

Server: openresty

Date: Sun, 19 Aug 2018 06:59:45 GMT

Content-Type: application/json; charset=utf-8

Content-Length: 440

Connection: close

X-Cache-Key: /data/2.5/weather?APPID=199c0c704dcd69ff1a88fc99385dae08&q=ghaziabad

Access-Control-Allow-Origin: *

Access-Control-Allow-Credentials: true

Access-Control-Allow-Methods: GET, POST

Response Body: 

{
    "City": "Ghaziabad",
    "Temperature": "32 Degree celsius",
    "Humidity": "75 Percent",
    "WeatherDescription": "haze",
    "WindSpeed": "2.1 Km per hour",
    "WindDirectionDegree": "320 Degree"
}
